class Produto {
	private String nome;
	private String descricao;
	private double preco;
	private String tipo;
																																										
	public Produto() {
		this("", "", 0.0);
	}
  
  public Produto(String nome, String descricao, double preco){
  	this.nome = nome;
 		this.descricao = descricao;
		this.preco = preco;
	}

	getters e setters...
	equals e hashCode...
	toString...
}

class Pratilheira {
  private List<Produto> produtos;
  private final int quantidadeMaxima;
  
  public Pratilheira(
  	List<Product> produtos,
  	int quantidadeMaxima
	) {
  	this.produtos = produtos;
  	this.quantidadeMaxima = pratileira;
  }
  
  private boolean existeProduto(Produto produto);
  public boolean removerProduto(String nomeProduto);
  public boolean adicionarProduto(Produto produto);
  public boolean atualizarPratilheira(ArrayList<Produto> produtos);
  
  getters e setters...
	equals e hashCode...
	toString...
}

class abstract Pessoa {
	
	private String nome;
	private int idade;
	private String cpf;
	
	public Pessoa() {
		this("", 0, "");
	}
	
	public Pessoa(String nome, int idade, String cpf) {
		this.nome = nome;
		this.idade = idade;
		this.cpf = cpf;
	}

	getters e setters...
	equals e hashCode...
	toString...
}

interface GerenteInterface {
<<<<<<< HEAD
	public Funcionario buscaFuncionario(String cpf) throws FuncionarioNotFound;
=======
	public Funcionario buscaFuncionario(String cpf) thows FuncionarioNotFound;
>>>>>>> 7760037 (uml)
  public boolean removerFuncionario(String cpf) throws FuncionarioNotFound;
  public boolean adicionaFuncionario(String nome, int idade, String cpf);
  public boolean listarFuncionarios();
}

class Gerente extends Pessoa implements GerenteInterface {

	private List<Funcionario> funcionarios;
	
  public Gerente(String nome, int idade, String cpf, List<Funcionario> funcionarios) {
  	super(nome, idade, cpf);
  	this.cpf = cpf;
  	this.funcionarios = funcionarios;
  }
	
	getters e setters...
	equals e hashCode...
	toString...
}

class Funcionario extends Pessoa {

	private String funcao;
	
	public Funcionario(String nome, int idade, String cpf, String funcao) {
		super(nome, idade, cpf);
		this.funcao = funcao;
	}
	
	getters e setters...
	equals e hashCode...
	toString...
}

class CaixaRegistradora {
	private double total;
		
	public CaixaRegistradora(double total) {
		this.total = total;
	}

	getters e setters...
	toString...
}

interface CarrinhoDeCompras {
	public boolean adicionarProduto(Produto producto);
	public boolean removerProduto(Produto produto);
}

class Pedido implements CarrinhoDeCompras {

	private int ID;
	private List<Produto> produtos;

	public adicionarProduto(Produto produto) {}
	public removerProduto(Produto produto) {}
	
	getters e setters...
	toString...	
}
